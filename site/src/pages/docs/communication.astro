---
import fs from 'node:fs';
import path from 'node:path';
import { fileURLToPath } from 'node:url';
import { Markdown } from 'astro/components';

const pageDir = fileURLToPath(new URL('.', import.meta.url));
const repoRoot = path.resolve(pageDir, '../../../..');
const communicationDir = path.join(repoRoot, 'docs/communication');
const files = fs
  .readdirSync(communicationDir)
  .flatMap((name) => {
    const absolute = path.join(communicationDir, name);
    const stat = fs.statSync(absolute);
    if (stat.isDirectory()) {
      return fs
        .readdirSync(absolute)
        .filter((inner) => inner.endsWith('.md'))
        .map((inner) => path.join(name, inner));
    }
    return name.endsWith('.md') ? [name] : [];
  })
  .sort();

const docs = files.map((relative) => ({
  relative,
  content: fs.readFileSync(path.join(communicationDir, relative), 'utf-8')
}));
---
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <title>Communication Â· Talk to Me Goose</title>
  </head>
  <body>
    <main>
      {docs.map((doc) => (
        <article>
          <Markdown content={doc.content} />
        </article>
      ))}
    </main>
  </body>
</html>
